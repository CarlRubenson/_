.grid {
    display: grid;
    grid-template-columns: repeat( var(--gridCells), 1fr);
    grid-template-rows: repeat( var(--gridCells), 1fr);
    aspect-ratio: 1 / 1;
    gap: min(5px, calc( 100% / calc( var(--gridCells) * 10 ) ));
    align-items: center;
    justify-self: center;
    height: 100%;
    width: 100%;
}

.cell {
    width: 100%;
    background-color: var(--boardColor);
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    aspect-ratio: 1 / 1;
}

.cell.disabled {
    background-color: var(--bgColor);
}






/*  Marker pieces */

.marker {
    width: 80%;
    border-radius: 50%;
    box-shadow: none;
    transform-style: preserve-3d;
    transition: transform 0.6s;
    position: relative;
    aspect-ratio: 1 / 1;
}

.cell.black > .marker::before,
.cell.white > .marker::before,
.cell.black > .marker::after,
.cell.white > .marker::after {
  content: '';
  position: absolute;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  backface-visibility: hidden;
  transition: background-color 0.3s;
}

.cell.black > .marker::before,
.cell.white > .marker::before {
  background-color: var(--blackColor);
  transform: rotateY(0deg);
}

.cell.black > .marker::after,
.cell.white > .marker::after {
  background-color: var(--whiteColor);
  transform: rotateY(180deg);
}

.cell.black > .marker {
  transform: rotateY(0deg);
}

.cell.white > .marker {
  transform: rotateY(180deg);
}

.cell.cell.empty > .marker {
  transform: var(--highlightRotation);
}

#grid:not([unguided]) > .cell.empty.impossible > .marker {
    display: none;
}

#grid:not([unguided]) > .cell.empty.possible > .marker {
    box-shadow: 0px 0px 10px var(--highlightColor);
    opacity: 50%;
}

.cell.empty:hover > .marker {
    box-shadow: 0px 0px 10px var(--highlightColor);
    background-color: var(--highlightColor);
    opacity: 40%;
}

.cell.disabled > .marker {
    display: none;
}







/* Labels and indicators */

.label {
    text-align: center;
    line-height: var(--cellSize);
    opacity: 0.5;
}